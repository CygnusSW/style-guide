@import "_decimal";
@import "../mixins/utility-functions";

/*  COLUMN SETUP  */
.col {
	display: block;
	float:left;
	margin: 1% 0 1% 0;
}

.group {
    @include flex(space-around, row);
}


/*  GROUPING  */
.group:before,
.group:after { content:""; display:table; }
.group:after { clear:both;}
.group { zoom:1; /* For IE 6/7 */ }


///GRID GENERATOR
@debug "Generating grid for " + $num-of-grid-cols + " columns with margin of " + $grid-margin;
$total-margin: $grid-margin * ($num-of-grid-cols - 1);
@debug "Total-Margin: " + $total-margin;
$width-per-col: decimal-round((100 - $total-margin) / $num-of-grid-cols, 2, "floor");
@debug "Width per column: " + $width-per-col;
$total-width-for-cols: $width-per-col * $num-of-grid-cols;
@debug "Total width for all columns: " + $total-width-for-cols;

@for $col from 1 through $num-of-grid-cols {    

    @if ($col != $num-of-grid-cols)
    {
        .s#{$col} {
            width: decimal-round($width-per-col * $col, 2, 'floor'); 
        }
        .offset-s#{$col} {
            $p2: ($num-of-grid-cols/$col) * 1%;//Convert to Percent
            margin-left: (100%/$p2) * 1%;
        }
    } @else {        
        .s#{$col} {
            width: 100%;
        }
    }
}